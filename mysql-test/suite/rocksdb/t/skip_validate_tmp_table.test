--source include/have_rocksdb.inc
--source include/have_debug.inc

CALL mtr.add_suppression("Schema mismatch - A DD table exists for table test\.t2, but that table is not registered in RocksDB");
CALL mtr.add_suppression("Schema mismatch - Table test\.t2_rdb_only is registered in RocksDB but does not have a corresponding DD table");

CREATE TABLE t1 (pk INT PRIMARY KEY) ENGINE=RocksDB;

# This will append '_rdb_only' to the end of new name
SET @@session.debug = "+d,gen_sql_table_name";
RENAME TABLE t1 TO t2;
SET @@session.debug = "-d,gen_sql_table_name";

# Restart the server
--let $restart_parameters=restart:--rocksdb_validate_tables=2
--source include/restart_mysqld.inc

--let $assert_text = The "test" database should have 1 table in MySQL DD (t2)
--let $assert_cond = [SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = "test"] = 1
--source include/assert.inc

--let $assert_text = The "test" database should have 1 table in RocksDB DD (t2_rdb_only)
--let $assert_cond = [SELECT COUNT(*) FROM information_schema.rocksdb_ddl WHERE table_schema = "test"] = 1
--source include/assert.inc


# Test statements on "t2_rdb_only" table
--error ER_METADATA_INCONSISTENCY
CREATE TABLE t2_rdb_only (pk INT PRIMARY KEY) ENGINE=RocksDB;

--error ER_NO_SUCH_TABLE
INSERT INTO t2_rdb_only VALUES (1);

--error ER_BAD_TABLE_ERROR
DROP TABLE t2_rdb_only;

--let $assert_text = The "test" database should have 1 table in RocksDB DD (t2_rdb_only)
--let $assert_cond = [SELECT COUNT(*) FROM information_schema.rocksdb_ddl WHERE table_schema = "test"] = 1
--source include/assert.inc


# Test statements on "t2" table
--error ER_INTERNAL_ERROR
CREATE TABLE t2 (pk INT PRIMARY KEY) ENGINE=RocksDB;

--error ER_INTERNAL_ERROR
INSERT INTO t2 VALUES (1);

--error ER_ENGINE_CANT_DROP_MISSING_TABLE
DROP TABLE t2;

DROP TABLE IF EXISTS t2;

--let $assert_text = The "test" database should have no tables in MySQL DD
--let $assert_cond = [SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = "test"] = 0
--source include/assert.inc
