create table r1 (
id1 int,
id2 int,
type int,
value varchar(100),
value2 int,
value3 int,
primary key (type, id1, id2),
index id1_type (id1, type, value2, value, id2)
) engine=rocksdb collate latin1_bin;
select 'loading data';
loading data
loading data
set global rocksdb_force_flush_memtable_now=1;
optimize table r1;
Table	Op	Msg_type	Msg_text
test.r1	optimize	status	OK
Test 1: Do a bunch of deletions
Expect: compaction
SET @save_rocksdb_compaction_sequential_deletes_count_sd = @@global.rocksdb_compaction_sequential_deletes_count_sd;
SET GLOBAL rocksdb_compaction_sequential_deletes_count_sd= ON;
select variable_value into @a from performance_schema.global_status where variable_name='rocksdb_additional_compaction_triggers';
set global rocksdb_compaction_sequential_deletes_window=10;
set global rocksdb_compaction_sequential_deletes= 9;
set global rocksdb_compaction_sequential_deletes_file_size=0;
set global rocksdb_force_flush_memtable_now=1;
select sleep(1);
sleep(1)
0
wait_for_delete: 1
No records in the database
SET GLOBAL rocksdb_compaction_sequential_deletes= 0;
SET GLOBAL rocksdb_compaction_sequential_deletes_file_size= 0;
SET GLOBAL rocksdb_compaction_sequential_deletes_window= 0;
select case when variable_value-@a > 0 then 'true' else 'false' end as additional_compaction from performance_schema.global_status where variable_name='rocksdb_additional_compaction_triggers';
additional_compaction
true
SET GLOBAL rocksdb_compaction_sequential_deletes_count_sd= @save_rocksdb_compaction_sequential_deletes_count_sd;
select 'loading data';
loading data
loading data
set global rocksdb_force_flush_memtable_now=1;
optimize table r1;
Table	Op	Msg_type	Msg_text
test.r1	optimize	status	OK
Test 2: Do a bunch of deletions
Expect: compaction
SET @save_rocksdb_compaction_sequential_deletes_count_sd = @@global.rocksdb_compaction_sequential_deletes_count_sd;
SET GLOBAL rocksdb_compaction_sequential_deletes_count_sd= ON;
select variable_value into @a from performance_schema.global_status where variable_name='rocksdb_additional_compaction_triggers';
set global rocksdb_compaction_sequential_deletes_window=10000;
set global rocksdb_compaction_sequential_deletes= 9999;
set global rocksdb_compaction_sequential_deletes_file_size=0;
set global rocksdb_force_flush_memtable_now=1;
select sleep(1);
sleep(1)
0
wait_for_delete: 1
No records in the database
SET GLOBAL rocksdb_compaction_sequential_deletes= 0;
SET GLOBAL rocksdb_compaction_sequential_deletes_file_size= 0;
SET GLOBAL rocksdb_compaction_sequential_deletes_window= 0;
select case when variable_value-@a > 0 then 'true' else 'false' end as additional_compaction from performance_schema.global_status where variable_name='rocksdb_additional_compaction_triggers';
additional_compaction
true
SET GLOBAL rocksdb_compaction_sequential_deletes_count_sd= @save_rocksdb_compaction_sequential_deletes_count_sd;
select 'loading data';
loading data
loading data
set global rocksdb_force_flush_memtable_now=1;
optimize table r1;
Table	Op	Msg_type	Msg_text
test.r1	optimize	status	OK
Test 3: Do a bunch of deletions with save_rocksdb_compaction_sequential_deletes_count_sd=OFF
Expect: compaction
select variable_value into @a from performance_schema.global_status where variable_name='rocksdb_additional_compaction_triggers';
set global rocksdb_compaction_sequential_deletes_window=10000;
set global rocksdb_compaction_sequential_deletes= 9999;
set global rocksdb_compaction_sequential_deletes_file_size=0;
set global rocksdb_force_flush_memtable_now=1;
select sleep(1);
sleep(1)
0
wait_for_delete: 0
There are deletes left
SET GLOBAL rocksdb_compaction_sequential_deletes= 0;
SET GLOBAL rocksdb_compaction_sequential_deletes_file_size= 0;
SET GLOBAL rocksdb_compaction_sequential_deletes_window= 0;
select case when variable_value-@a > 0 then 'true' else 'false' end as additional_compaction from performance_schema.global_status where variable_name='rocksdb_additional_compaction_triggers';
additional_compaction
false
drop table r1;
