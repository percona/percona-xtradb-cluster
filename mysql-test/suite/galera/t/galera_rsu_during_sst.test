--source include/galera_cluster.inc
--source include/have_debug_sync.inc

CREATE TABLE t1 (f1 INTEGER PRIMARY KEY, f2 CHAR(1));
INSERT INTO t1 VALUES (1, 'a'), (2, 'a'), (3, 'a');

SELECT * FROM t1;

# Initiate normal shutdown on the node 2:

--connection node_2

--echo Shutting down server ...
--source include/shutdown_mysqld.inc

# Wait until shutdown has been completed:

--connection node_1

--let $wait_condition = SELECT VARIABLE_VALUE = 1 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

# Remove the "grastate.dat" file to initiate new SST after restart:

--remove_file $MYSQLTEST_VARDIR/mysqld.2/data/grastate.dat

# Set debug synch point:

--let $galera_sync_point = sst_sent
--source include/galera_set_sync_point.inc

# Create new connection:

--let $galera_connection_name = node_1a
--let $galera_server_number = 1
--source include/galera_connect.inc

# Restart node 2:

--connection node_2

--echo Starting server ...
--let $start_mysqld_params=
--source include/start_mysqld.inc

# Waiting for the SST sync point:

--connection node_1a

--disable_query_log
--source include/galera_wait_sync_point.inc
--enable_query_log

# Initiate RSU operation during SST:

SET SESSION wsrep_OSU_method = "RSU";
CREATE TABLE t2 (f1 INTEGER);

# Signalling sync point (to complete SST):

--source include/galera_signal_sync_point.inc
--source include/galera_clear_sync_point.inc

# Wait until node 2 is ready:

--let $wait_condition = SELECT VARIABLE_VALUE = 2 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

# Sanity check (node 2 is running now and can perform SQL operators):

--connection node_2

SELECT * FROM t1;

--connection node_1a

DROP TABLE t2;

--connection node_1

DROP TABLE t1;
