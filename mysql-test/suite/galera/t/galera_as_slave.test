#
# Test Galera as a slave to a MySQL master
#
# The galera/galera_2node_slave.cnf describes the setup of the nodes
#

--source include/have_log_bin.inc

# As node #1 is not a Galera node, we connect to node #2 in order to run include/galera_cluster.inc
--connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2
--source include/galera_cluster_master_slave.inc

--connection node_2
--echo # connection node_2
--disable_query_log
--eval CHANGE MASTER TO  MASTER_HOST='127.0.0.1', MASTER_PORT=$NODE_MYPORT_1;
--enable_query_log
START SLAVE USER='root';

--connection node_1
--echo # connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES(1);

--connection node_2
--echo # connection node_2
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 't1';
--source include/wait_condition.inc

--let $wait_condition = SELECT COUNT(*) = 1 FROM t1;
--source include/wait_condition.inc

INSERT INTO t1 VALUES (2);

--connect node_3, 127.0.0.1, root, , test, $NODE_MYPORT_3
--echo # connection node_3
--let $wait_condition = SELECT COUNT(*) = 2 FROM t1;
--source include/wait_condition.inc
SELECT COUNT(*) = 2 FROM t1;
INSERT INTO t1 VALUES (3);

--connection node_2
--echo # connection node_2
--let $wait_condition = SELECT COUNT(*) = 3 FROM t1;
--source include/wait_condition.inc
SELECT COUNT(*) = 3 FROM t1;

--connection node_1
--echo # connection node_1
DROP TABLE t1;

--connection node_2
--echo # connection node_2
--sleep 1
--let $wait_condition = SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 't1';
--source include/wait_condition.inc

#
# PXC-761
# Restart node_3, check that it doesn't have any slave info
#
--connection node_3
--echo # connection node_3
# Remove the grastate.dat file to force an SST
--remove_file $MYSQLTEST_VARDIR/mysqld.3/data/grastate.dat
--echo # Restarting node 3 ...
--source include/shutdown_mysqld.inc
--source include/start_mysqld.inc

--source include/wait_until_connected_again.inc
--let $wait_condition = SELECT VARIABLE_VALUE = 2 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

query_vertical SHOW SLAVE STATUS;

# ==== PXC-761 TEST END ====


# Test cleanup
--connection node_2
--echo # connection node_2
STOP SLAVE;
RESET SLAVE ALL;

--connection node_1
RESET MASTER;
