--source include/galera_cluster.inc

#
# In this test, we run concurrent INSERT against a table against which we have issued concurrent DDL statements that are fully online,
# that is, DDL statements that allow for the DML to proceed non-blocking while the DDL is in progress
#

CREATE TABLE ten (f1 INTEGER);
INSERT INTO ten VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);

CREATE TABLE t1 (f1 INTEGER PRIMARY KEY AUTO_INCREMENT, f2 INTEGER) ENGINE=InnoDB;
INSERT INTO t1 (f2) SELECT 1 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4, ten AS a5;

--connection node_1
--send INSERT INTO t1 (f2) SELECT 1 FROM ten AS a1, ten AS a2, ten AS a3, ten AS a4, ten AS a5;

--let $galera_connection_name = node_1a
--let $galera_server_number = 1
--source include/galera_connect.inc

--connection node_1a
--send CREATE INDEX i1 ON t1 (f2);


--let $galera_connection_name = node_1b
--let $galera_server_number = 1
--source include/galera_connect.inc

--connection node_1b
--send ALTER TABLE t1 ADD COLUMN f3 INTEGER;

--connection node_1
--reap

--connection node_1a
--reap

--connection node_1b
--reap

--connection node_2
SELECT COUNT(*) = 200000 FROM t1;
SELECT COUNT(*) = 3 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 't1';
SELECT COUNT(*) = 2 FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_NAME = 't1';

--connection node_1
SELECT COUNT(*) = 200000 FROM t1;
SELECT COUNT(*) = 3 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 't1';
SELECT COUNT(*) = 2 FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_NAME = 't1';

DROP TABLE t1;
DROP TABLE ten;
