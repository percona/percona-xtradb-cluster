#
# Test Flush tables with read lock along with
# flush tables <table> with read lock for compatibility.
# Also, making sure all DDL and DMLs are propagated
# after provider is unpaused
#
--source include/galera_cluster.inc
--source include/have_innodb.inc

--let $galera_connection_name = node_2a
--let $galera_server_number = 2
--source include/galera_connect.inc

--connection node_1
CREATE TABLE t1 (id INT PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);

--connection node_2
SET session wsrep_sync_wait=0;
SET session wsrep_causal_reads=OFF;
FLUSH TABLE WITH READ LOCK;

--connection node_1
ALTER TABLE t1 ADD COLUMN f2 INTEGER;
INSERT INTO t1 VALUES (2,3);

--connection node_2a
SET session wsrep_sync_wait=0;
SET session wsrep_causal_reads=OFF;
--echo ### t1 shouldn't have that column
SHOW CREATE TABLE t1;

--echo ### This should block following FTFE
--send
FLUSH TABLES t1 WITH READ LOCK;

--connection node_2
let $wait_condition=
  select count(*) = 1 from information_schema.processlist
  where state = 'checking permissions' and
        info = 'FLUSH TABLES t1 WITH READ LOCK';
--source include/wait_condition.inc

--echo ### This should unlock FTWRL and unblock FTRL.
UNLOCK TABLES;

--connection node_2a
--echo ### FTRL fot t1 should exit successfully here.
--error 0
--reap

--echo ### t1 should now have the column f2.
SHOW CREATE TABLE t1;
--echo ### t1 should have two rows.
SELECT * from t1;

--sleep 1

--connection node_1
--echo ### These should not make it to node2
ALTER TABLE t1 ADD COLUMN f3 INTEGER;
INSERT INTO t1 VALUES (4,5,6);

--connection node_2a
--echo ### This should output only two rows
SELECT * from t1;
--echo ### This shouldn't show the column f3.
SHOW CREATE TABLE t1;

--echo ### This should resume provider again
UNLOCK TABLES;

--sleep 1

--echo ### This should output three rows
SELECT * from t1;
--echo ### This should show f3 column as well.
SHOW CREATE TABLE t1;

--connection node_1
DROP TABLE t1;
