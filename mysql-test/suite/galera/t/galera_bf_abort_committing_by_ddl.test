#
# The purpose of this test is to check that locally executing
# TOI DDLs will BF abort conflicting transactions.
#
# For details, see galera_bf_abort_committing_by_ddl.inc
#

--source include/galera_cluster.inc
--source include/have_innodb.inc
--source include/have_debug_sync.inc
--source suite/galera/include/galera_have_debug_sync.inc


--let galera_connection_name = con_dml
--let galera_server_number = 1
--source include/galera_connect.inc

--let galera_connection_name = con_ddl
--let galera_server_number = 1
--source include/galera_connect.inc

#
# Table maintenance DDLs
#

--echo # ANALYZE TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = ANALYZE TABLE t1
# Analyze takes read lock, so there is no BF abort
--let $expect_wsrep_local_replays = 0
--source galera_bf_abort_committing_by_ddl.inc
--connection node_1
DROP TABLE t1;

--echo # OPTIMIZE TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = OPTIMIZE TABLE t1
--let $expect_wsrep_local_replays = 1
--source galera_bf_abort_committing_by_ddl.inc
--connection node_1
DROP TABLE t1;

--echo # REPAIR TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = REPAIR TABLE t1
--let $expect_wsrep_local_replays = 1
--source galera_bf_abort_committing_by_ddl.inc
--connection node_1
DROP TABLE t1;

#
# Other DDLs
#

--echo # CREATE TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB
# Create table takes "S" lock to check the existence of the table.
# Therefore the BF abort does not happen if the table already exists.
--let $expect_wsrep_local_replays = 0
--source galera_bf_abort_committing_by_ddl.inc
--connection node_1
DROP TABLE t1;

--echo # DROP TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = DROP TABLE t1
--let $expect_wsrep_local_replays = 1
--source galera_bf_abort_committing_by_ddl.inc

--echo # ALTER TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = ALTER TABLE t1 ADD COLUMN f3 INT
--let $expect_wsrep_local_replays = 1
--source galera_bf_abort_committing_by_ddl.inc
DROP TABLE t1;

--echo # RENAME TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = RENAME TABLE t1 TO t3;
--let $expect_wsrep_local_replays = 1
--source galera_bf_abort_committing_by_ddl.inc
DROP TABLE t3;

--echo # TRUNCATE TABLE
--connection node_1
CREATE TABLE t1 (f1 INT PRIMARY KEY, f2 INT) ENGINE=InnoDB;
--let $bf_ddl = TRUNCATE TABLE t1;
--let $expect_wsrep_local_replays = 1
--source galera_bf_abort_committing_by_ddl.inc
DROP TABLE t1;

--connection node_2
CALL mtr.add_suppression("Slave SQL: Error 'Table 't1' already exists' on query.");
