#
# Checks that the innodb_memcached api is disabled
# when WSREP is enabled.
#

--source include/have_memcached_plugin.inc
--source suite/galera/include/have_perl_memcached_module.inc
--source include/galera_cluster.inc
--source include/force_restart.inc

#
# Create the memcached system tables
#
--connection node_1
--echo # Initialize memcached tables
--source include/memcache_config.inc


--echo # Fill in the memcached metadata tables
use innodb_memcache;

INSERT INTO cache_policies VALUES("cache_policy", "innodb_only",
                                  "innodb_only", "innodb_only", "innodb_only");

INSERT INTO config_options VALUES("separator", "|");

#
# describe table for memcache
#
INSERT INTO containers VALUES ("desc_t1", "test", "t1",
                               "c1", "c2", "c3", "c4", "c5", "PRIMARY");

#
# Tables must exist before plugin can be started!
#
USE test;

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (c1 VARCHAR(32),
                 c2 VARCHAR(1024),
                 c3 INT, c4 BIGINT UNSIGNED, c5 INT, primary key(c1))
ENGINE = INNODB;

INSERT INTO t1 VALUES ('AA', 'Hello', 0, 0, 0);
INSERT INTO t1 VALUES ('bb', 'Goodbye', 0, 0, 0);

--echo # Install and start the memcached plugin

#! **** IMPORTANT! ****
# memcached ports are based on the PXC bug number
# This way the tests will not interfere with other
# memcached tests.  Since node_2 is not used, it
# uses the default port (11211).
#

INSTALL PLUGIN daemon_memcached SONAME 'libmemcached.so';
--sleep 2

--echo # Test that the calls fail when WSREP is enabled (text protocol)
--let $MEMCACHED_SERVER_ADDRESS=127.0.0.1:11017
--let $USE_MEMCACHED_BINARY_PROTOCOL=0
--source suite/galera/include/galera_memcached_run_perl_test.inc

# check the output
# stat() should succeed, get and set should fail
--echo (text protocol) stat() returned : $galera_memcached_stat_result
--echo (text protocol) get() returned : $galera_memcached_get_result
--echo (text protocol) set() returned : $galera_memcached_set_result

--echo # Test that the calls fail when WSREP is enabled (binary protocol)
--let $MEMCACHED_SERVER_ADDRESS=127.0.0.1:11017
--let $USE_MEMCACHED_BINARY_PROTOCOL=1
--source suite/galera/include/galera_memcached_run_perl_test.inc

# check the output
# stat() should succeed, get and set should fail
--echo (binary protocol) stat() returned : $galera_memcached_stat_result
--echo (binary protocol) get() returned : $galera_memcached_get_result
--echo (binary protocol) set() returned : $galera_memcached_set_result

#
# disable WSREP
#
set global wsrep_provider="none";

--let $wait_condition = SELECT VARIABLE_VALUE = 0 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

--echo # Test that the calls succeed when WSREP is disabled (text protocol)
--let $MEMCACHED_SERVER_ADDRESS=127.0.0.1:11017
--let $USE_MEMCACHED_BINARY_PROTOCOL=0
--source suite/galera/include/galera_memcached_run_perl_test.inc

# check the output
# all the calls should succeed
--echo (text protocol) stat() returned : $galera_memcached_stat_result
--echo (text protocol) get() returned : $galera_memcached_get_result
--echo (text protocol) set() returned : $galera_memcached_set_result

--echo # Test that the calls succeed when WSREP is disabled (binary protocol)
--let $MEMCACHED_SERVER_ADDRESS=127.0.0.1:11017
--let $USE_MEMCACHED_BINARY_PROTOCOL=1
--source suite/galera/include/galera_memcached_run_perl_test.inc

# check the output
# all the calls should succeed
--echo (binary protocol) stat() returned : $galera_memcached_stat_result
--echo (binary protocol) get() returned : $galera_memcached_get_result
--echo (binary protocol) set() returned : $galera_memcached_set_result


