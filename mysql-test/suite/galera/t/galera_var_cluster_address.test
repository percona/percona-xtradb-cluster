#
# Check the handling of @@wsrep_cluster_address
#

--source include/galera_cluster.inc
--source include/force_restart.inc

#
# Set to invalid value
# 

--connection node_2
--let $wsrep_cluster_address_node2 = `SELECT @@wsrep_cluster_address`
SET GLOBAL wsrep_cluster_address = 'foo://';

# With wsrep_sync_wait, this returns an error
--error ER_LOCK_WAIT_TIMEOUT
SHOW STATUS;

SET SESSION wsrep_sync_wait=0;

--error 0
SELECT COUNT(*) > 0 FROM performance_schema.global_status;

# Must return 'OFF'
SHOW STATUS LIKE 'wsrep_ready';

# Must return 'Disconnected'
SHOW STATUS LIKE 'wsrep_cluster_status';

# Must return 0 = 'Initialized'
SHOW STATUS LIKE 'wsrep_local_state';
SHOW STATUS LIKE 'wsrep_local_state_comment';

--connection node_1
--sleep 1
# Node #1 thinks that it is now part of a single-node primary cluster 
SELECT VARIABLE_VALUE = 1 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size';
SELECT VARIABLE_VALUE = 'Primary' FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_status';

#
# Reset everything as it was
#

--connection node_2
--disable_query_log
--eval SET GLOBAL wsrep_cluster_address = '$wsrep_cluster_address_node2';
--enable_query_log

--source include/wait_until_connected_again.inc

--connection node_1
SELECT VARIABLE_VALUE = 'Primary' FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_status';
SELECT VARIABLE_VALUE = 2 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size';

#-------------------------------------------------------------------------------
#
# Re-load wsrep_cluster_address with audit-plugin enabled and active parallel
# connection. Closing of connection during stop replication shouldn't
# generate audit-plugin events.
#
--connection node_2
--let $wsrep_cluster_address_orig = `SELECT @@wsrep_cluster_address`
INSTALL PLUGIN audit_log SONAME 'audit_log.so';

--connect node_2a, 127.0.0.1, root, , test, $NODE_MYPORT_2
show status like 'wsrep_local_state_comment';

--replace_regex /127\.0\.0\.1:[0-9]{1,5}/127.0.0.1:<PORT>/
--eval SET GLOBAL wsrep_cluster_address = '$wsrep_cluster_address_orig';
--source include/wait_until_connected_again.inc
--source include/galera_wait_ready.inc
#
UNINSTALL PLUGIN audit_log;
show status like 'wsrep_cluster_size';
#
--echo #shutdown node-2 to get rid of audit plugin that is marked deleted but not removed
--source include/shutdown_mysqld.inc

#
--connection node_1
--let $wait_condition = SELECT VARIABLE_VALUE = 1 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc
--echo #restart node-1 to get rid of audit plugin that is marked deleted but not removed
--source include/restart_mysqld.inc
--source include/galera_wait_ready.inc

#
--connection node_2
--echo #restart node-2
--let $_expect_file_name= $MYSQLTEST_VARDIR/tmp/mysqld.2.expect
--source include/start_mysqld.inc

#
--connection node_1
--let $wait_condition = SELECT VARIABLE_VALUE = 2 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc


--connection node_2
CALL mtr.add_suppression("Backend not supported: foo");
CALL mtr.add_suppression("Failed to initialize backend using 'foo");
CALL mtr.add_suppression("Failed to open channel 'my_wsrep_cluster' at 'foo");
CALL mtr.add_suppression("gcs connect failed: Socket type not supported");
CALL mtr.add_suppression("Provider.*Node.*failed to establish connection with cluster.*");
CALL mtr.add_suppression("gcs_caused\\(\\) returned -103 \\(Software caused connection abort\\)");
CALL mtr.add_suppression("failed to open gcomm backend connection: 110: failed to reach primary view: 110");
CALL mtr.add_suppression("Failed to open backend connection: -110 \\(Connection timed out\\)");
CALL mtr.add_suppression("gcs connect failed: Connection timed out");
