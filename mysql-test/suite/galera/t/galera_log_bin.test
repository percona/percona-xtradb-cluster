--source include/galera_cluster.inc
--source include/have_innodb.inc
--source include/force_restart.inc

#
# Test Galera with --log-bin --log-slave-updates .
# This way the actual MySQL binary log is used,
# rather than Galera's own implementation
#

--connection node_2
RESET MASTER;

--connection node_1
RESET MASTER;

CREATE TABLE t1 (id INT PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);

CREATE TABLE t2 (id INT) ENGINE=InnoDB;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (1);

--connection node_2
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 't2'
--source include/wait_condition.inc

--let $wait_condition = SELECT COUNT(*) = 2 FROM t2
--source include/wait_condition.inc

SELECT COUNT(*) = 1 FROM t1;
SELECT COUNT(*) = 2 FROM t2;

--connection node_1
ALTER TABLE t1 ADD COLUMN f2 INTEGER;

FLUSH LOGS;

# Use pos 123 in order to skip the header that contains the MySQL version number.
# Otherwise, version number changes will cause the test to break
--replace_regex /table_id: [0-9]+/table_id: #/ /xid=[0-9]+/xid=#/
SHOW BINLOG EVENTS IN 'mysqld-bin.000002' FROM 123;

--connection node_2
SELECT COUNT(*) = 2 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 't1';

--replace_regex /table_id: [0-9]+/table_id: #/ /xid=[0-9]+/xid=#/
SHOW BINLOG EVENTS IN 'mysqld-bin.000001' FROM 123;

DROP TABLE t1;
DROP TABLE t2;

--connection node_1
RESET MASTER;
