--source include/galera_cluster.inc

#
# Test CREATE FUNCTION
#

--connection node_1
CREATE USER 'user1';

CREATE
DEFINER = 'user1'
FUNCTION f1 (param INTEGER)
RETURNS VARCHAR(200)
COMMENT 'f1_comment'
LANGUAGE SQL
NOT DETERMINISTIC
MODIFIES SQL DATA
SQL SECURITY DEFINER
RETURN 'abc';
GRANT EXECUTE ON FUNCTION f1 TO user1;

CREATE
DEFINER = CURRENT_USER
FUNCTION f2 (param VARCHAR(100))
RETURNS INTEGER
DETERMINISTIC
NO SQL
SQL SECURITY INVOKER
RETURN 123;

--connection node_1
SHOW CREATE FUNCTION f1;

--connection node_2
# Work around codership/mysql-wsrep#228 - SHOW CREATE FUNCTION not covered by wsrep_sync_wait
SELECT 1 FROM DUAL;
SHOW CREATE FUNCTION f1;

--connection node_1
SHOW CREATE FUNCTION f2;

--connection node_2
SHOW CREATE FUNCTION f2;

SELECT f1(1) = 'abc';
SELECT f2('abc') = 123;

--connection node_1
DROP FUNCTION f1;
DROP FUNCTION f2;

DROP USER 'user1';


#-------------------------------------------------------------------------------
#
# create and drop udf function
#
--connection node_1
--echo #node-1 (create function)
CREATE FUNCTION service_get_write_locks RETURNS INT SONAME 'locking_service.so';
--let $wait_condition = SELECT COUNT(*) = 1 FROM mysql.func WHERE name = 'service_get_write_locks';
--source include/wait_condition.inc

--connection node_1
--echo #node-2 (check if function is created)
--let $wait_condition = SELECT COUNT(*) = 1 FROM mysql.func WHERE name = 'service_get_write_locks';
--source include/wait_condition.inc

--echo #node-1 (drop function)
DROP FUNCTION service_get_write_locks;
--let $wait_condition = SELECT COUNT(*) = 0 FROM mysql.func WHERE name = 'service_get_write_locks';
--source include/wait_condition.inc

--connection node_1
--echo #node-2 (check if function is dropped)
--let $wait_condition = SELECT COUNT(*) = 0 FROM mysql.func WHERE name = 'service_get_write_locks';
--source include/wait_condition.inc
