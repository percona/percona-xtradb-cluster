#
# Test that applying a DDL plays well with FLUSH TABLE table_name WITH READ LOCK. The applier
# thread should block until UNLOCK TABLEs.
#

--source include/galera_cluster.inc

--connection node_1
SET SESSION wsrep_sync_wait = 0;

# Those values are valid only for connection node_1. The global values from the -master.opt file apply to applier threads.
SET SESSION lock_wait_timeout = 60;
SET SESSION innodb_lock_wait_timeout=60;
SET SESSION wait_timeout=60;

CREATE TABLE t1 (f1 INTEGER PRIMARY KEY) ENGINE=InnoDB;

FLUSH TABLE t1 WITH READ LOCK;

--connection node_2
ALTER TABLE t1 ADD COLUMN f2 INTEGER;

--connection node_1
SELECT 1 FROM DUAL;
# Sleep for longer than the global timeout ...
--sleep 6
# FTWRL will pause wsrep provider on node-1 and so events generated by other
# nodes will not be applied till such lock is lifted and so ALTER table is
# not executed on node-1

UNLOCK TABLES;

SET SESSION wsrep_sync_wait = 15;

SHOW CREATE TABLE t1;
SELECT COUNT(*) = 0 FROM performance_schema.processlist WHERE USER = 'system user' AND STATE = 'Waiting for table metadata lock';

DROP TABLE t1;
