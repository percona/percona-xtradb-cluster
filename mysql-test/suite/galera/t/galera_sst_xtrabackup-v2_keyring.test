#
# This test checks that the keyring option is supported by the SST script.
#
# The initial SST happens on startup (but may not have an encrypted table).
# In addition, we also test the case where there is an encrypted table with data.
#

--source include/big_test.inc
--source include/galera_cluster.inc
--source include/have_innodb.inc

# Force a restart at the end of the test
--source include/force_restart.inc

--let $assert_text = Keyring plugin requires SST encryption
--let $assert_select = You have enabled keyring plugin. SST encryption is mandatory.
--let $assert_count = 1
--let $assert_file = $MYSQLTEST_VARDIR/log/mysqld.1.err
--let $assert_only_after = CURRENT_TEST
--source include/assert_grep.inc

SELECT 1;

--let $wait_condition = SELECT VARIABLE_VALUE = 2 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size';
--source include/wait_condition.inc


# Kill node 2 to force an SST
# echo Killing node 2 ...
--connection node_2
--source include/kill_galera.inc

# Wait until the node is confirmed as being down
--connection node_1
--let $wait_condition = SELECT VARIABLE_VALUE = 1 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

# Basic setup, create an encrypted table
CREATE TABLE e1 (
  id INT NOT NULL AUTO_INCREMENT,
  text VARCHAR(10) DEFAULT NULL,
  PRIMARY KEY (id)
) ENCRYPTION='Y';

INSERT INTO e1(text) VALUES('aaaaa');
INSERT INTO e1(text) VALUES('bbbbb');


# Restart the server
--connection node_2
--echo Restarting node 2 ...
--source include/start_mysqld.inc

--let $wait_condition = SELECT VARIABLE_VALUE = 2 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

select * from e1;

#
# test IST with keyring enabled.
#
--connection node_2
--echo #shutting down node-2
--source include/shutdown_mysqld.inc

--connection node_1
--echo #node-1
--let $wait_condition = SELECT VARIABLE_VALUE = 1 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

INSERT INTO e1(text) VALUES('aaaaa2');
INSERT INTO e1(text) VALUES('bbbbb2');

--connection node_2
--echo #restarting node-2
--source include/start_mysqld.inc

--let $wait_condition = SELECT VARIABLE_VALUE = 2 FROM INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

select * from e1;

--connection node_1
--echo #node-1
drop table e1;


