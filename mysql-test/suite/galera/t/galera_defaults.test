#
# The purpose of this test is to preserve the current state of the following:
# * SHOW VARIABLES LIKE 'wsrep%'
# * wsrep_provider_options
# * The names of the Galera status variables
#
# This way, if there is any change, inadvertent or not, the test will fail and the
# developer and QA will be alerted.
#

--source include/galera_cluster.inc

# Global Variables
SELECT UPPER(VARIABLE_NAME), VARIABLE_VALUE
FROM performance_schema.global_variables
WHERE VARIABLE_NAME LIKE 'wsrep_%'
AND VARIABLE_NAME NOT IN (
	'WSREP_PROVIDER_OPTIONS',
	'WSREP_SST_RECEIVE_ADDRESS',
	'WSREP_NODE_ADDRESS',
	'WSREP_NODE_NAME',
	'WSREP_PROVIDER',
	'WSREP_DATA_HOME_DIR',
	'WSREP_NODE_INCOMING_ADDRESS',
	'WSREP_START_POSITION'
)
ORDER BY VARIABLE_NAME;

# wsrep_provider_options
#
# We replace the ones that vary from run to run with placeholders

--let _WSREP_PROVIDER_OPTIONS = `SELECT @@wsrep_provider_options`
--perl
	use strict;
	my $wsrep_provider_options = $ENV{'_WSREP_PROVIDER_OPTIONS'};
	$wsrep_provider_options =~ s/base_dir = .*?;/<BASE_DIR>;/sgio;
	$wsrep_provider_options =~ s/base_host = .*?;/<BASE_HOST>;/sgio;
	$wsrep_provider_options =~ s/base_port = .*?;/<BASE_PORT>;/sgio;
	$wsrep_provider_options =~ s/gcache\.dir = .*?;/<GCACHE_DIR>;/sgio;
	$wsrep_provider_options =~ s/gcache\.name = .*?;/<GCACHE_NAME>;/sgio;
	$wsrep_provider_options =~ s/gcache\.debug = .*?; //sgio;
	$wsrep_provider_options =~ s/gmcast\.listen_addr = .*?;/<GMCAST_LISTEN_ADDR>;/sgio;
	$wsrep_provider_options =~ s/ist\.recv_addr = .*?;/<IST_RECV_ADDR>;/sgio;
	$wsrep_provider_options =~ s/evs\.evict = .*?;/<EVS_EVICT>;/sgio;
	$wsrep_provider_options =~ s/signal = .*?;\s*//sgio;
	$wsrep_provider_options =~ s/dbug = .*?;\s*//sgio;
	$wsrep_provider_options =~ s/gcs.recv_q_hard_limit = .*?;\s*/<RECV_Q_HARD_LIMIT>;/sgio;
	$wsrep_provider_options =~ s/repl.proto_max = .*?;\s*/<REPL_PROTO_MAX>;/sgio;
	print $wsrep_provider_options."\n";
EOF

# Global Status

SELECT COUNT(*) FROM performance_schema.global_status
WHERE VARIABLE_NAME LIKE 'wsrep_%'
AND VARIABLE_NAME != 'wsrep_debug_sync_waiters';

SELECT UPPER(VARIABLE_NAME) FROM performance_schema.global_status
WHERE VARIABLE_NAME LIKE 'wsrep_%'
AND VARIABLE_NAME != 'wsrep_debug_sync_waiters'
ORDER BY VARIABLE_NAME;
