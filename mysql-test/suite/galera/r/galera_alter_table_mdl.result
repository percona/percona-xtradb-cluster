RESET MASTER;
SET GLOBAL wsrep_sync_wait = 0;
CREATE TABLE t1 (a INTEGER PRIMARY KEY);
# --------------------------------
# Test 1: Execute ALTER TABLE on node2 (Remote)
# --------------------------------
# Adding debug point 'halt_alter_table_after_lock_downgrade' to @@GLOBAL.debug
ALTER TABLE t1 ENGINE = InnoDB;
SET DEBUG_SYNC = 'now WAIT_FOR alter_table_inplace_after_downgrade';
INSERT INTO test.t1 VALUES(10);
SET SESSION wsrep_sync_wait = 0;
include/assert.inc [INSERT query should be waiting for the metadata lock.]
SET DEBUG_SYNC = 'now SIGNAL continue_inplace_alter';
SET DEBUG_SYNC = 'RESET';
SELECT * FROM t1;
a
10
include/assert_binlog_events.inc [Anonymous_Gtid # Query/.*CREATE TABLE.* # Anonymous_Gtid # Query/.*ALTER TABLE.* # Anonymous_Gtid # Query/.*BEGIN # Table_map # Write_rows # Xid]
# --------------------------------
# Test 2: Execute ALTER TABLE on node1 (Local)
# --------------------------------
RESET MASTER;
ALTER TABLE t1 ENGINE = InnoDB;;
SET DEBUG_SYNC = 'now WAIT_FOR alter_table_inplace_after_downgrade';
INSERT INTO test.t1 VALUES(11);
SET SESSION wsrep_sync_wait = 0;
include/assert.inc [INSERT query should be waiting for the metadata lock.]
SET DEBUG_SYNC = 'now SIGNAL continue_inplace_alter';
SET DEBUG_SYNC = 'RESET';
SELECT * FROM t1;
a
10
11
include/assert_binlog_events.inc [Anonymous_Gtid # Query/.*ALTER TABLE.* # Anonymous_Gtid # Query/.*BEGIN # Table_map # Write_rows # Xid]
# --------------------------------
# Test 3: Testing with wsrep_OSU_method = "RSU"
# --------------------------------
RESET MASTER;
SET SESSION wsrep_OSU_method = "RSU";
ALTER TABLE t1 ENGINE = InnoDB;;
SET DEBUG_SYNC = 'now WAIT_FOR alter_table_inplace_after_downgrade';
INSERT INTO test.t1 VALUES(12);
SET SESSION wsrep_sync_wait = 0;
include/assert.inc [INSERT query should be waiting for the metadata lock.]
SET DEBUG_SYNC = 'now SIGNAL continue_inplace_alter';
SET DEBUG_SYNC = 'RESET';
SELECT * FROM t1;
a
10
11
12
SET SESSION wsrep_OSU_method = DEFAULT;
include/assert_binlog_events.inc [Anonymous_Gtid # Query/.*ALTER TABLE.* # Anonymous_Gtid # Query/.*BEGIN # Table_map # Write_rows # Xid]
# Removing debug point 'halt_alter_table_after_lock_downgrade' from @@GLOBAL.debug
# --------------------------------
# Test 4: Testing with ALGORITHM and LOCK syntax.
# --------------------------------
ALTER TABLE t1 ADD COLUMN b INTEGER;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t1 ADD INDEX i1(b), LOCK= DEFAULT;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
# In the below tests, ALTER TABLE with LOCK=NONE is not supported for the
# reason that it needs SHARED LOCK during the execution on the query.
ALTER TABLE t1 ADD INDEX i2(b), LOCK= NONE;
ERROR 0A000: LOCK=NONE is not supported for this operation. Try LOCK=SHARED.
ALTER TABLE t1 ADD INDEX i2(b), LOCK= SHARED;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 1
Warnings:
Warning	1831	Duplicate index 'i2' defined on the table 'test.t1'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t1 ADD INDEX i3(b), LOCK= EXCLUSIVE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 1
Warnings:
Warning	1831	Duplicate index 'i3' defined on the table 'test.t1'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t1 ADD INDEX i4(b), ALGORITHM=INPLACE, LOCK= NONE;
ERROR 0A000: LOCK=NONE is not supported for this operation. Try LOCK=SHARED.
ALTER TABLE t1 ADD INDEX i4(b), ALGORITHM=INPLACE, LOCK= SHARED;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 1
Warnings:
Warning	1831	Duplicate index 'i4' defined on the table 'test.t1'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t1 ADD INDEX i5(b), ALGORITHM=INPLACE, LOCK= EXCLUSIVE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 1
Warnings:
Warning	1831	Duplicate index 'i5' defined on the table 'test.t1'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t1 ENGINE=InnoDB, ALGORITHM= INPLACE, LOCK= NONE;
ERROR 0A000: LOCK=NONE is not supported for this operation. Try LOCK=SHARED.
ALTER TABLE t1 ENGINE=InnoDB, ALGORITHM= INPLACE, LOCK= SHARED;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t1 ENGINE=InnoDB, ALGORITHM= INPLACE, LOCK= EXCLUSIVE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t1 CHANGE COLUMN b c INT, ALGORITHM= INPLACE, LOCK= NONE;
ERROR 0A000: LOCK=NONE is not supported for this operation. Try LOCK=SHARED.
ALTER TABLE t1 CHANGE COLUMN b c INT, ALGORITHM= INPLACE, LOCK= SHARED;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t1 CHANGE COLUMN c b INT, ALGORITHM= INPLACE, LOCK= EXCLUSIVE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int(11) NOT NULL,
  `b` int(11) DEFAULT NULL,
  PRIMARY KEY (`a`),
  KEY `i1` (`b`),
  KEY `i2` (`b`),
  KEY `i3` (`b`),
  KEY `i4` (`b`),
  KEY `i5` (`b`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
affected rows: 1
ALTER TABLE t1 DROP INDEX i2, ALGORITHM= INPLACE, LOCK= DEFAULT;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t1 DROP INDEX i3, ALGORITHM= INPLACE, LOCK= NONE;
ERROR 0A000: LOCK=NONE is not supported for this operation. Try LOCK=SHARED.
ALTER TABLE t1 DROP INDEX i4, ALGORITHM= INPLACE, LOCK= SHARED;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t1 DROP INDEX i5, ALGORITHM= INPLACE, LOCK= EXCLUSIVE;
affected rows: 0
info: Records: 0  Duplicates: 0  Warnings: 0
ALTER TABLE t1 RENAME TO t2, ALGORITHM= INPLACE, LOCK= NONE;
ERROR 0A000: LOCK=NONE/SHARED is not supported for this operation. Try LOCK=EXCLUSIVE.
ALTER TABLE t1 RENAME TO t2, ALGORITHM= INPLACE, LOCK= SHARED;
ERROR 0A000: LOCK=NONE/SHARED is not supported for this operation. Try LOCK=EXCLUSIVE.
ALTER TABLE t1 RENAME TO t2, ALGORITHM= INPLACE, LOCK= EXCLUSIVE;
affected rows: 0
ALTER TABLE t2 RENAME TO t1, ALGORITHM= INPLACE, LOCK= DEFAULT;
affected rows: 0
CALL mtr.add_suppression("LOCK=NONE is not supported for this operation. Try LOCK=SHARED.");
CALL mtr.add_suppression("LOCK=NONE is not supported. Reason: COPY algorithm requires a lock. Try LOCK=SHARED.");
CALL mtr.add_suppression("LOCK=NONE/SHARED is not supported for this operation. Try LOCK=EXCLUSIVE.");
SET GLOBAL wsrep_sync_wait = 15;;
DROP TABLE t1;
