#node-1
create table t1 (i int) engine=innodb;
insert into t1 values (1), (2), (3);
set wsrep_replicate_myisam = 0;
create table t2 (j int) engine=myisam;
insert into t2 values (10), (20), (30);
set wsrep_replicate_myisam = 0;
set wsrep_replicate_myisam = 1;
create table t3 (j int) engine=myisam;
insert into t3 values (100), (200), (300);
set wsrep_replicate_myisam = 0;
create compression_dictionary numbers ('percona');
create table tdict (
id int,
a blob column_format compressed,
b blob column_format compressed with compression_dictionary numbers,
primary key pk(id)) engine=innodb;
insert into tdict values (
1, repeat('percona is great company', 50),
repeat('percona is great company', 50));
#node-2
show tables;
Tables_in_test
t1
t2
t3
tdict
select * from t1;
i
1
2
3
select * from t2;
j
select * from t3;
j
100
200
300
show create table tdict;
Table	Create Table
tdict	CREATE TABLE `tdict` (
  `id` int NOT NULL,
  `a` blob /*!50633 COLUMN_FORMAT COMPRESSED */,
  `b` blob /*!50633 COLUMN_FORMAT COMPRESSED WITH COMPRESSION_DICTIONARY `numbers` */,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
# ensure dictionary is created
select * from information_schema.compression_dictionary_tables where dict_name like '%number%';
TABLE_SCHEMA	TABLE_NAME	COLUMN_NAME	DICT_NAME
test	tdict	b	numbers
#node-1
truncate table t1;
truncate table t2;
truncate table t3;
#node-2
show tables;
Tables_in_test
t1
t2
t3
tdict
select * from t1;
i
select * from t2;
j
select * from t3;
j
#node-1
drop table t1;
drop table t2;
drop table t3;
drop table tdict;
drop compression_dictionary numbers;
#node-2
# ensure dictionary drop is replicated
select * from information_schema.compression_dictionary_tables where dict_name like '%number%';
TABLE_SCHEMA	TABLE_NAME	COLUMN_NAME	DICT_NAME
#node-2
call mtr.add_suppression("Can't create database");
call mtr.add_suppression("Query apply failed.*");
#node-1
set global wsrep_debug=1;
create table t (i int, primary key pk(i)) engine=innodb;
SET SESSION wsrep_sync_wait = 0;
SET DEBUG_SYNC = "pxc_in_commit_flush_stage SIGNAL entered1 WAIT_FOR continue1";
insert into t values (1);;
#node-1b
SET SESSION wsrep_sync_wait = 0;
#node-1a
SET SESSION wsrep_sync_wait = 0;
SET DEBUG_SYNC = "now WAIT_FOR entered1";
create database test;;
#node-1b
SET DEBUG_SYNC = "now SIGNAL continue1";
#node-1a
ERROR HY000: Can't create database 'test'; database exists
#node-1
select * from t;
i
1
SET GLOBAL wsrep_debug = NONE;
SET DEBUG_SYNC = 'RESET';
drop table t;
call mtr.add_suppression("Slave SQL: Error \'Table \'t\' already exists\' on query.*");
call mtr.add_suppression("Ignoring error \'Table \'t\' already exists' on query");
call mtr.add_suppression("Slave SQL: Error \'Table \'t\' already exists\' on query.*");
call mtr.add_suppression("Ignoring error \'Table \'t\' already exists' on query");
#node-1 (this connection will take handler lock)
create table t (i int, primary key pk(i)) engine=innodb;
insert into t values (1);
handler t open h1;
#node-2 (this connection will issue a conflicting ddl)
alter table t engine=innodb;
#node-1a
#node-1 (now close handler)
handler h1 close;
create table t (i int, primary key pk(i)) engine=innodb;
ERROR 42S01: Table 't' already exists
drop table t;
#node-1 (this connection will take user level lock)
create table t (i int, primary key pk(i)) engine=innodb;
insert into t values (1);
select get_lock('a', 10);
get_lock('a', 10)
1
#node-2 (this connection will issue a conflicting ddl)
alter table t engine=innodb;
select sleep(5);
sleep(5)
0
#node-1 (now release user level lock)
select release_lock('a');
release_lock('a')
1
create table t (i int, primary key pk(i)) engine=innodb;
ERROR 42S01: Table 't' already exists
drop table t;
use test;
create table t (i int, c1 char(10), c2 char(10), c12 char(20) as (CONCAT(c1, c2)), b blob);
insert into t (i, c1, c2, b) values (1, 'newyork', 'us', repeat('a', 1000));
insert into t (i, c1, c2, b) values (2, 'zagreb', 'croatia', repeat('b', 1000));
insert into t (i, c1, c2, b) values (3, 'pune', 'india', repeat('c', 1000));
select c12 from t;
c12
newyorkus
zagrebcroatia
puneindia
update t set c1 = "mysql";
select c12 from t;
c12
mysqlus
mysqlcroatia
mysqlindia
drop table t;
use test;
create table t (i int, c1 char(10), c2 char(10), primary key pk(i));
insert into t values (1, 'newyork', 'us');
insert into t values (2, 'zagreb', 'croatia');
insert into t values (3, 'pune', 'india');
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `i` int NOT NULL,
  `c1` char(10) DEFAULT NULL,
  `c2` char(10) DEFAULT NULL,
  PRIMARY KEY (`i`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
#node-1a (obtain backup instance lock)
lock instance for backup;
#node-1b (fire alter table that should wait for explicit backup lock)
alter table t add index idx(c1);;
#node-1a (release backup instance lock)
unlock instance;
#node-1b (check if alter is complete)
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `i` int NOT NULL,
  `c1` char(10) DEFAULT NULL,
  `c2` char(10) DEFAULT NULL,
  PRIMARY KEY (`i`),
  KEY `idx` (`c1`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
drop table t;
set @@wsrep_replicate_myisam = 0;;
SET DEBUG_SYNC = "reset";
