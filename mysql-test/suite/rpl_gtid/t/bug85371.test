#
# In the case if the bug is not fixed the test will crash on assert
# in Rows_query_log_event::do_apply_event() on debug build.
#
--source include/have_binlog_format_row.inc
--source include/not_group_replication_plugin.inc

--let $rpl_topology= 1->3,3->2,1->2
--let $rpl_multi_source= 1
--let $use_gtids= 1
--source include/rpl_init.inc

--echo ### Create some binlog events on server_1
--connection server_1
CREATE TABLE t1(a INT);
INSERT INTO t1 (a) VALUES (1), (2), (3), (4), (5);
INSERT INTO t1 (a) VALUES (6), (7), (8), (9), (10);
DROP TABLE t1;

--echo ### sync the server_3 with server_1
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

--let $rpl_channel_name= 'channel_1'
--let $sync_slave_connection= server_3
--source include/sync_slave_sql_with_master.inc

--echo ### sync the server_2 with server_3
--let $rpl_connection_name= server_3
--source include/rpl_connection.inc

--let $rpl_channel_name= 'channel_3'
--let $sync_slave_connection=server_2
--source include/sync_slave_sql_with_master.inc

--echo ### sync the server_2 with server_1
--echo ### here crash must take place if the bug is not fixed
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

--let $rpl_channel_name= 'channel_1'
--let $sync_slave_connection= server_2
--source include/sync_slave_sql_with_master.inc

--echo ### finish replication
--let $rpl_connection_name= server_1
--source include/rpl_connection.inc

--let $rpl_skip_sync= 1
--source include/rpl_end.inc
