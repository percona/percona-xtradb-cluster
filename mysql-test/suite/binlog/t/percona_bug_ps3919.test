# PS-3919: assertion when performing a binlog rotation during an implicit commit
let $initial_max_binlog_size = `select @@GLOBAL.max_binlog_size`;
SET @@GLOBAL.max_binlog_size=4096;

# Write stuff to the binlog
CREATE TABLE t3 (c1 VARCHAR(255) CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_bin',c2 VARCHAR(255) ,c3 VARCHAR(255), PRIMARY KEY(c1)) ENGINE=InnoDB;
CREATE TABLE IF NOT EXISTS t3 (c1 VARCHAR(255) PRIMARY KEY,c2 VARCHAR(255) ,c3 VARCHAR(255)) ENGINE=InnoDB;
INSERT INTO t3 VALUES (
'b1234567890123456789012345678901234567890123456789012345678901234567890',
'1234567890123456789012345678901234567890123456789012345678901234567890',
'1234567890123456789012345678901234567890123456789012345678901234567890');
INSERT INTO t3 VALUES (
'1234567890123456789012345678901234567890123456789012345678901234567890',
'1234567890123456789012345678901234567890123456789012345678901234567890',
'1234567890123456789012345678901234567890123456789012345678901234567890');
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
TRUNCATE t3;
CREATE TABLE IF NOT EXISTS t3 (c1 VARCHAR(255) PRIMARY KEY,c2 VARCHAR(255) ,c3 VARCHAR(255)) ENGINE=InnoDB;
ROLLBACK WORK;
START TRANSACTION;
INSERT INTO t3 VALUES (
'1234567890123456789012345678901234567890123456789012345678901234567890',
'1234567890123456789012345678901234567890123456789012345678901234567890',
'1234567890123456789012345678901234567890123456789012345678901234567890');

# Analyze table performs an implicit commit, and ends the current transaction
ANALYZE LOCAL TABLE t3;

DROP TABLE t3;
eval SET @@GLOBAL.max_binlog_size=$initial_max_binlog_size;

